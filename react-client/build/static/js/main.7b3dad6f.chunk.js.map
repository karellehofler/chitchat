{"version":3,"sources":["components/displays/index.js","components/menu/Menu.js","hooks/useWindowSize.js","components/inputs/index.js","components/ChatRoom.js","components/UserSignIn.js","App.js","reportWebVitals.js","index.js"],"names":["Branding","id","className","style","margin","padding","borderRadius","Menu","useState","slider","setSlider","size","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","onClick","prev","href","data-target","display","opacity","transform","transitionProperty","transitionDuration","src","InputContainer","children","isInline","Button","handleClick","label","classes","props","UsernameInput","username","setUsername","for","type","name","value","onChange","MessageInput","message","setMessage","handleSubmit","handleChange","placeholder","RoomHeader","room","MessageBubble","float","time","MessageFeed","messages","user","map","ChatRoom","socket","setMessages","currentMessage","setCurrentMessage","sendMessage","e","a","messageData","Date","now","getHours","getMinutes","preventDefault","emit","list","on","data","messageList","action","target","onKeyPress","key","UserSignIn","io","connect","App","chat","setChat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b3dad6f.chunk.js","sourcesContent":["const Branding = () => (\r\n    <div id=\"logo\">\r\n        <h1 className=\"flow-text\">\r\n            <span style={{ margin: '0px 5px' }} className=\"light-blue-text\">Chit</span>\r\n            <span style={{ padding: '10px', borderRadius: '10px'}} className=\"light-blue darken-1 white-text\">Chat</span>\r\n        </h1>\r\n    </div>\r\n)\r\n\r\nexport { Branding }","import React, { useEffect, useState } from 'react';\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\nimport { Branding } from '../displays';\r\n\r\nfunction Menu () {\r\n    \r\n    const [ slider, setSlider ] = useState(false);\r\n    const size = useWindowSize();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"valign-wrapper menu-btn-wrapper\">\r\n                <button onClick={() => setSlider(prev => !prev)}\r\n                href=\"#\" data-target=\"slide-out\" \r\n                className=\"sidenav-trigger show-on-large light-blue-text text-darken-1 trans-btn\">\r\n                    <i className=\"material-icons\">menu</i>\r\n                </button>\r\n            </div>\r\n            <div className=\"side-nav-overlay side-nav-bg\"\r\n            style={{ display: slider && size.width < 980 ? \"block\" : \"none\",\r\n            opacity: \"1\" }}>\r\n                <ul id=\"slide-out\" className=\"sidenav\" style={{\r\n                    transform: slider || size.width > 980 ? \"translateX(0%)\" : \"\",\r\n                    transitionProperty: \"transform\",\r\n                    transitionDuration: \".25s\"\r\n                }}>\r\n                    <li>\r\n                        <div className=\"side-nav-branding\">\r\n                            <Branding />\r\n                            <a onClick={() => setSlider(prev => !prev)}>\r\n                                <i className=\"material-icons\">close</i>\r\n                            </a>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"user-view\">\r\n                            <div className=\"background\">\r\n                                <img src=\"https://images.pexels.com/photos/9934462/pexels-photo-9934462.jpeg?cs=srgb&dl=pexels-mo-9934462.jpg&fm=jpg\" />\r\n                            </div>\r\n                            <a href=\"#user\">\r\n                                <img className=\"circle\" src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\" />\r\n                            </a>\r\n                            <a href=\"#name\"><span className=\"white-text name\">John Doe</span></a>\r\n                            <a href=\"#email\"><span className=\"white-text email\">jdandturk@gmail.com</span></a>\r\n                        </div>\r\n                    </li>\r\n                    <li><div className=\"divider\"></div></li>\r\n                    <li><a href=\"#\">Sign Out</a></li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu;","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === \"object\";\r\n\r\n    function getSize() {\r\n        return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined\r\n        };\r\n    }\r\n\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n    useEffect(() => {\r\n        if (!isClient) {\r\n        return false;\r\n        }\r\n\r\n        function handleResize() {\r\n        setWindowSize(getSize());\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { chatRooms } from '../../enums';\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst InputContainer = ({ children, isInline, width }) => (\r\n    <div className={!width && `row`} style={{ width: `${width}`}}>\r\n        <form className=\"col s12\">\r\n            <div className=\"row\">\r\n                <div className={`input-field col s12 ${isInline ? `inline` : ``}`}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n)\r\n\r\nconst Button = ({ handleClick, label, classes, ...props}) => (\r\n    <>\r\n        <button className={`btn waves-light waves-effect ${classes && classes}`} \r\n        onClick={handleClick} {...props}>\r\n            {label}\r\n        </button>\r\n    </>\r\n)\r\n\r\nconst UsernameInput = ({ username, setUsername, handleClick }) =>  (\r\n    <InputContainer isInline width=\"50%\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" className=\"validate col s9 m9\" \r\n        name=\"username\" value={username}\r\n        onChange={setUsername}  />\r\n         <Button label=\"Enter\" classes=\"white light-blue-text text-darken-1 col s3 m3\" \r\n        handleClick={handleClick} />\r\n    </InputContainer>\r\n)\r\n\r\nconst MessageInput = ({ message, setMessage, handleSubmit, handleChange, ...props }) => (\r\n    <>\r\n        <InputContainer isInline>\r\n            <input type=\"text\" placeholder=\"What would you like to say?\" \r\n            className=\"validate col s10\" name=\"message-input\" value={message}\r\n            {...props} onChange={setMessage} />\r\n            <Button type=\"submit\" classes=\"col s2 light-blue darken-2\" \r\n            label=\"Send\" handleClick={handleSubmit} />\r\n        </InputContainer>\r\n    </>\r\n)\r\n\r\nconst RoomSelect = ({ setRoom }) => {\r\n\r\n    // useEffect(() => {\r\n    //     document.addEventListener('DOMContentLoaded', function() {\r\n    //         // var elems = document.querySelectorAll('select');\r\n    //         M.AutoInit();\r\n    //     });\r\n    // }, [])\r\n\r\n    return(\r\n        <InputContainer>\r\n            <select className=\"browser-default\" onChange={setRoom}>\r\n                {chatRooms && chatRooms.map((room) => (\r\n                    <option key={room.id} value={room.name}>\r\n                        {room.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nexport { UsernameInput, MessageInput, RoomSelect, Button }","import React, { useState, useEffect   } from 'react';\r\nimport { MessageInput } from './inputs';\r\nimport Menu from './menu/Menu';\r\n\r\nconst RoomHeader = ({ room }) => (\r\n    <div className=\"chat-room-header z-depth-2\">\r\n        <Menu />\r\n        <div className=\"chat-room-title\">\r\n            {room && <h2>{room}</h2>}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst MessageBubble = ({ message, float }) => (\r\n    <div className=\"row\">\r\n        {/* {align == \"right\" : } */}\r\n        <div className={`chat-bubble ${float === 'left' ? `left` : `right`}`}>\r\n            <div className=\"card-panel light-blue darken-1 small\">\r\n                <span className=\"white-text flow-text\">{message.message}</span>\r\n            </div>\r\n            <span>{message.username} | {message.time}</span>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst MessageFeed = ({ messages, user }) => (\r\n    <div className=\"row chat-room-messages\">\r\n        <div id=\"messages-container\" className=\"col s12\">\r\n            {messages && messages.map((message) => (\r\n                <MessageBubble message={message}\r\n                float={user === message.username ? \"right\" : \"left\"} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default function ChatRoom({ socket, username, room }) {\r\n    \r\n    const [ messages, setMessages ] = useState([]);\r\n    const [ currentMessage, setCurrentMessage ] = useState(\"\");\r\n    \r\n    const sendMessage = async (e) => {\r\n       if(currentMessage !== \"\") {\r\n            const messageData = {\r\n                room: room,\r\n                username: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() +\r\n                \":\" + new Date(Date.now()).getMinutes(),\r\n            };\r\n\r\n            e.preventDefault();\r\n            await socket.emit(\"send_message\", messageData);\r\n            setMessages((list) => [...list, messageData]);\r\n            // scrollToBottom();\r\n            setCurrentMessage(\"\");\r\n       }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            setMessages((messageList) => [...messageList, data ]);\r\n        });\r\n\r\n    }, [socket]);\r\n\r\n    return (\r\n        <>\r\n            <RoomHeader room={room} />\r\n            <MessageFeed messages={messages} user={username}/>\r\n            <form className=\"chat-bar\" action=\"\">\r\n                <MessageInput message={currentMessage} \r\n                setMessage={e => setCurrentMessage(e.target.value)}\r\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage}\r\n                handleSubmit={sendMessage} />\r\n            </form>           \r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { rules } from '../enums';\r\nimport { UsernameInput, Button } from './inputs';\r\nimport { Branding } from './displays';\r\n// const RulesList = [];\r\nexport default function UserSignIn({ username, setUsername, handleClick }) {\r\n\r\n    return (\r\n        <div id=\"chat-user\">\r\n            <Branding />\r\n            <UsernameInput username={username} \r\n            setUsername={(e) => setUsername(e.target.value)}\r\n            handleClick={handleClick} />\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport './App.scss';\nimport io from 'socket.io-client';\nimport MenuBar from './components/menu/Menu';\nimport ChatRoom from './components/ChatRoom';\nimport UserSignIn from './components/UserSignIn';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  // const [ username, setUsername ] = useLocalStorage('username', 'thelurker94');\n  const [ username, setUsername ] = useState('');\n  const [ room, setRoom ] = useState(\"General\");\n  const [ chat, setChat ] = useState(false);\n\n  const joinRoom = () => {\n    if(username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setChat(true);\n    }\n  }\n\n  useEffect(() => {\n    if(username !== '') setChat(true);\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {!chat ? \n      <UserSignIn username={username} \n      setUsername={(e) => setUsername(e.target.value)} \n      handleClick={joinRoom} />\n      :\n      <ChatRoom socket={socket} username={username} room={room} />\n      }\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}